# bitmex config recorded in application.private.config
# for testnet:
# bitmex.url = "https://testnet.bitmex.com"
# bitmex.wsUrl = "wss://testnet.bitmex.com/realtime?subscribe=orderBook10:XBTUSD,trade:XBTUSD,instrument:.BXBT,funding:XBTUSD"
# for real thing:
# bitmex.url = "https://www.bitmex.com"
# bitmex.wsUrl = "wss://www.bitmex.com/realtime?subscribe=orderBook10:XBTUSD,trade:XBTUSD,instrument:.BXBT,funding:XBTUSD"
# ...add credentials!
# bitmex.apiKey = "XXX"
# bitmex.apiSecret = "YYY"

# akka infrastructure
akka.loggers = ["akka.event.slf4j.Slf4jLogger"]
akka.loglevel = "DEBUG"
akka.logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
akka.http.client.websocket.periodic-keep-alive-max-idle = 9 s
# akka.http.host-connection-pool.idle-timeout = 300 s

# graphite connection - comment out if don't want to send metrics
graphite.host = localhost
graphite.port = 2003

# bot specifics
bot.restSyncTimeoutMs = 9000         # 9 secs, to fall under 10 sec akka timeout
bot.runType = live           # indicates running on live data, but not trading
bot.useSynthetics = false              # indicates whether to generate OrderBookSummaries out of Trades, if only using Trades feed...

bot.bots.XBTUSD {
  namespace = "moon.xbtusd"
  wssSubscriptions = "orderBook10:XBTUSD,order:XBTUSD,trade:XBTUSD"  # or in full: orderBook10:XBTUSD,trade:XBTUSD,instrument:.BXBT,funding:XBTUSD,order:XBTUSD
  drainPriceDeltaPct = 0.005
  drainMinPosition = 5
  # Important, keep lot sizes multiples of 100! https://www.reddit.com/r/BitMEX/comments/nq2cyy/create_order_api_invalid_leavesqty/
  # Training config
  # Notes:
  # - started at peak: BTC = USD42k
  # - starting position: 0.0135BTC
  # - exhausted all tiers at 40.5k, have position of 2.8k, liquidation price 35.k - too high/dangerous!!!
  # - need to aim for liquidation price ~half the current price
  #
  # Tier config should depend on both likelihood of trading in that area, and what the qty means in that tier.
  # Eg. if the bot is assumes steady growth, it may allocate more smaller tiers in higher percentiles.
  #     if the bot assumes bigger swings on the way up, it may spread out the tiers
  #     qty at lower percentile tiers should probably represent % of the price, ie. half the qty at half the price = same amount in underlying
  takeProfitPerc = 0.0005
  tiers = [
    [0.9995, 500],  # tier 0 always populated at the top, ie. 1st trade @ 100%, hence the tier should be thinner (eg. 1 - takeProfitPerc) to accommodate dropping down to lower tier
    [0.99,   400],  # decreasing by 2^n %, ie. 2, 4, 8, 16, 32
    [0.97,   400],
    [0.93,   300],
    [0.85,   300],
    [0.69,   200],
    [0.37,   100],
    # total position size = 2400, but @ different leverage
  ],
  shouldDrain = true
  # trading strategy
  strategy.selection = indecreasing    # running strategy, can be: weighted, bbands, rsi, macd, macdoverma, indecreasing, ma...
  # strategy.permabull.blah = 1        # FIXME: workaround for empty config...
  strategy.indecreasing.periods = [4, 2, 1]
  strategy.indecreasing.dataFreq = 1h              # period frequency
  strategy.indecreasing.minAbsSlope = 0.001        # 0.001 ~  USD40 per hour @ 40k/BTC
  strategy.indecreasing.maxAbsSlope = 0.01         # 0.01  ~ USD400 per hour @ 40k/BTC - excessive slope suggests likelihood of reversal
}